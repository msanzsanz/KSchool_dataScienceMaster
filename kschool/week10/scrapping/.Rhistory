require(rvest)
amanece <- read_html("https://www.imdb.com/title/tt0094641/?ref_=nv_sr_1")
amanece
amanece %>% html_node("title")
amanece %>% html_nodes("title")
amanece %>%
html_nodes("title") %>%
html_text()
amanece %>%
html_node("title") %>%
html_text()
amanece %>% html_nodes("p")
elpais <- read_html("https://resultados.elpais.com/resultats/eleccions/2016/generals/congreso/")
elpais
elpais %>% html_table()
elpais %>% html_attrs()
elpais %>% html_children()
elpais %>% html_nodes()
elpais %>% html_table()
elpais %>% html_table()
elpais %>% html_table(header=TRUE)
elpais %>% html_table(header=TRUE) %>% .[[2]]
elpais %>% html_table(header=TRUE) %>% .[[2]] %>% .[[3]]
?data.frame
?data_frame
??data_frame
elpais_df <- data_frame(elpais %>%
html_table(header=TRUE) %>%
.[[2]] %>%
.[[3]])
elpais_df <- data.frame(elpais %>%
html_table(header=TRUE) %>%
.[[2]] %>%
.[[3]])
elpais_df
elpais_df <- data.frame(elpais %>%
html_table(header=TRUE) %>%
.[[2]] )
elpais_df
View(elpais_df)
names(elpais_df) <- c("Partido", "Escanios", "Votos", "Votos_per")
require(tidyverse)
ggplot(elpais_df, aes(x = Partido, y = Votos)) + geom_bar()
ggplot(elpais_df, aes(x = Partido, y = Votos)) + geom_bar("identity")
ggplot(elpais_df, aes(x = Partido, y = Votos)) + geom_bar(stat="identity")
amanece %>% html_nodes("table a")
amanece %>%
html_nodes("table a") %>%
html_attr("href")
root = "https://www.imdb.com/"
amanece %>%
html_nodes("table a")
amanece %>%
html_nodes("table")
amanece %>%
html_nodes("table") %>% .[[1]]
amanece %>%
html_nodes("table") %>% .[[1]]  %>%
html_attr("href")
amanece %>%
html_nodes("table") %>% .[[1]]
html_nodes("table a")
amanece %>%
html_nodes("table") %>% .[[1]]
html_nodes("a")
wiki <- read_html("https://es.wikipedia.org/wiki/Provincia_de_España")
wiki <- read_html("https://es.wikipedia.org/wiki/Provincia_de_España")
wiki <- read_html("https://es.wikipedia.org/wiki/Provincia_de_España/")
elpais <- read_html("https://resultados.elpais.com/resultats/eleccions/2016/generals/congreso/")
wiki <- read_html("https://es.wikipedia.org/wiki/Provincia_de_España")
wiki
wiki <- read_html("https://es.wikipedia.org/wiki/Provincia_de_España")
wiki <- read_html("https://es.wikipedia.org/wiki/Provincia_de_España")
wiki <- read_html("http://es.wikipedia.org/wiki/Provincia_de_España")
wiki <- read_html("http://es.wikipedia.org")
wiki <- read_html("http://es.wikipedia.org/wiki/")
wiki <- read_html("https://es.wikipedia.org/wiki/Provincia_de_Espa%C3%B1a")
wiki
wiki %>% html_table(header=TRUE)
wiki %>% html_tables()
wiki %>% html_table()
wiki %>% html_table(fill=T)
casaReal <- read_html("http://www.casareal.es/ES/Actividades/Paginas/actividades_discursos_detalle.aspx?data=5000")
casaReal <- read_html("http://www.casareal.es/ES/Actividades/Paginas/actividades_discursos_detalle.aspx?data=5000")
casaReal %>%
html_text()
casaReal %>%
html_nodes("p") %>%
html_text()
casaReal %>%
html_nodes("p") %>%
html_text() %>%
paste(collapse = " ")
casaReal <- read_html("http://www.casareal.es/ES/Actividades/Paginas/actividades_discursos_detalle.aspx?data=5000", to = "UTF-8")
casaReal %>%
html_nodes("p") %>%
html_text() %>%
paste(collapse = " ")
seesionInfo()
sessionInfo()
casaReal <- read_html("http://www.casareal.es/ES/Actividades/Paginas/actividades_discursos_detalle.aspx?data=5000", encoding = "utf8")
casaReal %>%
html_nodes("p") %>%
html_text() %>%
paste(collapse = " ")
Sys.setlocale("LC_ALL", "es_ES-UTF-8")
casaReal <- read_html("http://www.casareal.es/ES/Actividades/Paginas/actividades_discursos_detalle.aspx?data=5000")
casaReal %>%
html_nodes("p") %>%
html_text() %>%
paste(collapse = " ")
ys.setlocale("LC_ALL", "es_ES-UTF-8")
Sys.setlocale("LC_ALL", "es_ES-UTF-8")
Sys.setlocale("LC_ALL", 'en_US.UTF-8')
casaReal <- read_html("http://www.casareal.es/ES/Actividades/Paginas/actividades_discursos_detalle.aspx?data=5000")
casaReal %>%
html_nodes("p") %>%
html_text() %>%
paste(collapse = " ")
ibex35 <- read_html(“http://www.bolsamadrid.es/esp/aspx/Mercados/Precios.aspx?indice=ESI100000000”)
ibex35 <- read_html("http://www.bolsamadrid.es/esp/aspx/Mercados/Precios.aspx?indice=ESI100000000")
ibex35 %>% html_nodes("table")
ibex35 %>%
html_nodes("table") %>%
html_table(fill = TRUE)
ibex35 %>%
html_nodes("table") %>%
html_table(fill = TRUE) %>%
lapply(dim)
ibex35 %>%
html_nodes("table") %>%
html_table(fill = TRUE) %>% .[[5]]
cotizacion_ibex35 <- ibex35 %>%
html_nodes("table") %>%
html_table(fill = TRUE) %>% .[[5]]
cotizacion_ibex35 <- ibex35 %>%
html_nodes("table") %>%
html_table(fill = TRUE) %>%
.[[5]]
cotizacion_ibex35
sesion <- html_session("http://www.imbd.com")
session %>% jump_to("boxoffice")
sesion <- html_session("http://www.imdb.com")
session %>% jump_to("boxoffice")
sesion <- html_session("http://www.imdb.com")
sesion %>% jump_to("boxoffice")
sesion %>%
jump_to("boxoffice") %>%
html_nodes("table")
sesion %>%
jump_to("boxoffice") %>%
html_nodes("table") %>%
.[[1]] %>%
html_table()
sesion %>% session_history()
sesion %>%  jump_to("boxoffice")%>% session_history()
sesion %>% follow_link("Indian")
sesion %>%  jump_to("boxoffice")%>% session_history()
html_form(sesion)
html_form(sesion)
sesion
html_form(sesion)
busqueda <-html_form(sesion)[[1]] %>% set_values(`q` = "amanece", s="Titles")
?set_values
busqueda <-html_form(sesion)[[1]] %>% set_values(q = "amanece", s="Titles")
busqueda %>%
submit_form(session=sesion)
busqueda <-html_form(sesion)[[1]] %>% set_values(q = "amanece", s="Titles")
busqueda %>%
submit_form(session=sesion)
busqueda %>%
submit_form(session=sesion) %>%
html_nodes("td.result_text")
busqueda %>%
submit_form(session=sesion) %>%
html_nodes()
busqueda %>%
submit_form(session=sesion) %>%
html_nodes("table")
busqueda %>%
submit_form(session=sesion) %>%
html_nodes("td.result_text") %>% html_text()
busqueda %>%
submit_form(session=sesion) %>%
html_nodes("table")
busqueda %>%
submit_form(session=sesion) %>%
html_nodes("td.result_text") %>% html_text()
gsub("h", "H", c("hola", "búho"))
?gsub
gsub("h", "H", c("hola", "búho"))
?gsub
sub("h", "H", c("hola", "búho"))
sub("h", "H", c("hola", "búho"))
gsub("^h", "H", c("hola", "búho"))
str_replace(c("hola", "búho"), "^h", "H")
str_to_upper(c("hola", "búho"))
gsub("a", "as", c("pera", "sandias"))
sub("a", "as", c("pera", "sandias"))
gsub("a$", "as", c("pera", "sandias"))
grep("a$", c("pera", "sandia", "platano"), value = TRUE)
colours
colors[:10]
colors[10]
head(colors(),10)
colors() %>%
grep("blue$", value = TRUE)
grep("blue$", colors(), value = TRUE)
# Todos los colores que terminan por blue
grep("blue$", colors(), value = TRUE)
paste("A", 1:6)
paste("A", 1:6, sep = ".")
paste("A", 1:6, sep = ".", collapse = "\n")
paste("A", 1:6, sep = ".", collapse = "\\n")
paste("A", 1:6, sep = ".", collapse = "\\\n")
paste("A", 1:6, sep = ".", collapse = "-n")
paste("A", 1:6, sep = ".", collapse = "-")
msg <- paste("A", 1:6, sep = ".", collapse = "-")
strsplit(msg, "\n")
strsplit(msg, "\n")[[1]]
msg <- paste("A", 1:6, sep = ".", collapse = "\n")
cat(msg)
paste("A", 1:6, sep = ".", collapse = "\n")
ficheros <- c(“ventas_20160522_zaragoza.csv”, “pedidos_firmes_20160422_soria.csv”)
ficheros <- c("ventas_20160522_zaragoza.csv", "pedidos_firmes_20160422_soria.csv")
separa <- function (name){
palabras <- strsplit(name, split = "_")
}
separa("ventas_20160522_zaragoza.csv")
separa("ventas_20160522_zaragoza.csv")
kk <- separa("ventas_20160522_zaragoza.csv")
kk
kk[3]
kk[2]
?strsplit
separa <- function (name){
palabras <- strsplit(name, split = "_%Y%m%dd")
palabras[]
}
kk <- separa("ventas_20160522_zaragoza.csv")
kk
separa <- function (name){
palabras <- strsplit(name, split = "_\\d{8}_")
palabras[]
}
kk <- separa("ventas_20160522_zaragoza.csv")
kk
kk[[1]]
kk[[1]][2]
mfield<-read_html("https://es.wikipedia.org/w/index.php?title=Medalla_Fields&oldid=103644843")
mfield %>% html_nodes("table")
mfield %>% html_nodes("table")
mfield %>%
html_nodes("table") %>%
html_text()
mfield %>%
html_nodes("table") %>%
.[[2]]
html_text()
mfield %>%
html_nodes("table") %>%
.[[2]] %>%
html_text()
texto <- mfield %>%
html_nodes("table") %>%
.[[2]] %>%
html_text()
mfield %>%
html_nodes("table") %>%
.[[2]] %>%
html_table()
Medallistas <- mfield %>%
html_nodes("table") %>%
.[[2]] %>%
html_table()
class(Medallistas)
names(Medallistas)
Medallistas
names(Medallistas)
Medallistas <- mfield %>%
html_nodes("table") %>%
.[[2]] %>%
html_table() %>%
.[[2]]
class(Medallistas)
names(Medallistas)
mfield %>%
html_nodes("table") %>%
.[[2]] %>%
html_table() %>%
.[[2]]
Medallistas <- mfield %>%
html_nodes("table") %>%
.[[2]] %>%
html_table() %>%
.[[2]]
names(Medallistas)
Medallistas
class(Medallistas)
str_extract(Medallistas, "()")
str_extract(Medallistas, "\\([^()]+\\)")
str_extract(Medallistas, "\\(\\)")
str_extract(Medallistas, "\\([.]\\)")
str_extract(Medallistas, "\\([:]\\)")
str_extract(Medallistas, "\\([^]\\)")
str_extract(Medallistas, "\\([^()]\\)")
str_extract(Medallistas, "\\([^()]\\)")
str_extract(Medallistas, "\\([^()]+\\)")
str_extract(Medallistas, "\\([]+\\)")
str_extract(Medallistas, "\\([.]+\\)")
str_extract(Medallistas, "\\([.]+\\)")
str_extract(Medallistas, "\\([\\.]+\\)")
str_extract(Medallistas, "\\([^()]+\\)")
paises <- str_extract(Medallistas, "\\([^()]+\\)")
paises
class(paises)
str_extract(Medallistas, "\\([^()]+\\)") %>%
gsub("\\(", "")
paises <- str_extract(Medallistas, "\\([^()]+\\)") %>%
str_replace("\\(", "")
paises
str_extract(Medallistas, "\\([^()]+\\)") %>%
str_replace_all("[()]", "")
str_extract(Medallistas, "\\([^()]+\\)") %>%
str_replace_all("[()]", "") %>%
str_split(" y ")
str_extract(Medallistas, "\\([^()]+\\)") %>%
str_replace_all("[()]", "") %>%
str_split(" y ") %>%
unlist()
str_extract(Medallistas, "\\([^()]+\\)") %>%
str_replace_all("[()]", "") %>%
str_split(" y ") %>%
unlist() %>%
str_replace("^ ", "")
str_extract(Medallistas, "\\([^()]+\\)") %>%
str_replace_all("[()]", "") %>%
str_split(" y ") %>%
unlist() %>%
#str_replace("^[:blank:", "")
str_trim()
str_extract(Medallistas, "\\([^()]+\\)") %>%
str_replace_all("[()]", "") %>%
str_split(" y ") %>%
unlist() %>%
#str_replace("^[:blank:", "")
str_trim() %>% c()
str_extract(Medallistas, "\\([^()]+\\)") %>%
str_replace_all("[()]", "") %>%
str_split(" y ") %>%
unlist() %>%
#str_replace("^[:blank:", "")
str_trim()
Medallistas
texto<-c("Eso es insultar al lector, es llamarle torpe","Es decirle: ¡fíjate, hombre, fíjate, que aquí hay intención!","Y por eso le recomendaba yo a un señor que escribiese sus artículos todo en bastardilla","Para que el público se diese cuenta de que eran intencionadísimos desde la primera palabra a la última.")
texto
class(texto)
texto
texto_df <- data_frame(texto = texto)
texto_df
texto_df
names(texto_df)
texto_df
texto_df <- data_frame(fila = 1:4, texto = texto)
texto_df
names(texto_df)
require(tidytext)
texto_df %>% unnest_tokens(palabra, texto)
unnest <- texto_df %>%
unnest_tokens(palabra, texto)
View(unnest)
unnest %>%
group_by(palabra) %>%
summarise(total = n())
texto_df
texto_df %>%
unnest_tokens(palabra, texto, tokens="ngrams", n=3)
texto_df %>%
unnest_tokens(palabra, texto, token = "ngrams", n=3)
?unnest_tokens
require(janeaustenr)
libros <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [[:digit:]ivxlc]", ignore_case=TRUE)))) %>%
ungroup()
libros
austen_books
austen_books() %>%
group_by(book)
austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [[:digit:]ivxlc]", ignore_case=TRUE)))) %>%
austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [[:digit:]ivxlc]", ignore_case=TRUE))))
austen_books() %>%
group_by(book)
austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [[:digit:]ivxlc]", ignore_case=TRUE)))) %>%
ungroup()
austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [[:digit:]ivxlc]", ignore_case=TRUE))))
austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [[:digit:]ivxlc]", ignore_case=TRUE))))
austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [[:digit:]ivxlc]", ignore_case=TRUE)))) %>%
ungroup()
libros <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [[:digit:]ivxlc]", ignore_case=TRUE)))) %>%
ungroup()
View(libros)
austen_books() %>%
group_by(book)
libros <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [[:digit:]ivxlc]", ignore_case=TRUE)))) %>%
ungroup()
tokens <- libros %>% unnest_tokens(word, text)
tokens
stop_words
stop_words
stop_words(language="es")
stopwords(language="es")
library(stopwords)
stopwords(language="es")
stopwords(language="kr")
stopwords(language="fr")
stopwords(language="es")
stopwords(language="es", source="stopwords-iso")
tokens <- libros %>% unnest_tokens(word, text)
tokens <- tokens %>% anti_join(stop_words)
tokens %>% count(word, sort = TRUE)
tokens
tokens %>% count(word, sort = TRUE)
freq <- tokens %>% count(word, sort = TRUE)
require(wordcloud)
wordcloud(words = freq$word, freq = freq$n, min.freq = 300,
max.words=100, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
install.packages("wordcloud")
require(wordcloud)
wordcloud(words = freq$word, freq = freq$n, min.freq = 300,
max.words=100, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
