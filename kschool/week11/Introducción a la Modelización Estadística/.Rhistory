if(!require("ggplot2")){
install.packages("ggplot2")
library("ggplot2")
}
if (!require("gap")){
install.packages("gap")
library(gap)
}
setwd("~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week11/Introducci??n a la Modelizaci??n Estad??stica")
if(!require("ggplot2")){
install.packages("ggplot2")
library("ggplot2")
}
setwd("~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week11/Introducci??n a la Modelizaci??n Estad??stica")
setwd("~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week11/Introducción a la Modelización Estadística")
creditos=read.csv("data/creditos.csv",stringsAsFactors = FALSE)
View(creditos)
str(creditos)
head(creditos)
summary(creditos)
creditos$Gender=as.factor(creditos$Gender)
creditos$Mortgage=as.factor(creditos$Mortgage)
creditos$Married=as.factor(creditos$Married)
creditos$Ethnicity=as.factor(creditos$Ethnicity)
summary(creditos)
t.test(Income ~ Gender, data = creditos)
summary(creditos)
t.test(Income ~ Gender, data = creditos)
# el p-v
modeloInd1=lm(Income ~ Rating, data = creditos)
summary(modeloInd1)
creditos=read.csv("data/creditos.csv",stringsAsFactors = FALSE)
head(creditos)
if(!require("ggplot2")){
install.packages("ggplot2")
library("ggplot2")
}
if (!require("gap")){
install.packages("gap")
library(gap)
}
creditos=read.csv("data/creditos.csv",stringsAsFactors = FALSE)
setwd("~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week11/Introducción a la Modelización Estadística")
setwd("~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week11/Introducción a la Modelización Estadística")
getwd
getwd()
setwd("~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week11/Introducción a la Modelización Estadística")
setwd("~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week11/Introducción a la Modelización Estadística")
setwd("~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week11/Introducción a la Modelización Estadística")
setwd("~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week11/Introducción a la Modelización Estadística")
Sys.setlocale("LC_ALL", "pt_PT.1252")
Sys.setlocale("LC_ALL", "pt_PT.ISO8859-1")
setwd("~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week11/Introducción a la Modelización Estadística")
setwd("~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster copy/kschool/week11/Introducción a la Modelización Estadística")
creditos=read.csv("data/creditos.csv",stringsAsFactors = FALSE)
View(creditos)
str(creditos)
head(creditos)
summary(creditos)
t.test(Income ~ Gender, data = creditos)
summary(creditos)
t.test(Income ~ Gender, data = creditos)
modeloT=lm(Income ~ Gender, data = creditos)
summary(modeloT)
modeloInd1=lm(Income ~ Rating, data = creditos)
summary(modeloInd1)
ggplot(creditos, aes(x = Rating, y = Income)) + geom_point() +
geom_smooth(method = "lm", se=TRUE, color="red", formula = y ~ x)
modeloInd2=lm(Income ~ Products, data = creditos)
summary(modeloInd2)
modeloGlobal=lm(Income ~ ., data = creditos)
summary(modeloGlobal)
anova(modeloInd1,modeloGlobal)
t.test(Income ~ Gender, data = creditos)
modeloT=lm(Income ~ Gender, data = creditos)
summary(modeloT)
modeloT=lm(Income ~ Gender, data = creditos)
summary(modeloT)
modeloInd1=lm(Income ~ Rating, data = creditos)
summary(modeloInd1)
modeloInd2=lm(Income ~ Products, data = creditos)
summary(modeloInd2)
modeloInd3=lm(Income ~ Age, data = creditos)
summary(modeloInd3)
modeloGlobal=lm(Income ~ ., data = creditos)
summary(modeloGlobal)
anova(modeloInd1,modeloGlobal)
modeloMultiple=lm(Income ~            , data = creditos)
summary(modeloMultiple)
modeloFinal=lm(Income ~ Rating+Mortgage+Balance, data = creditos)
summary(modeloFinal)
plot(modeloFinal$residuals)
hist(modeloFinal$residuals)
qqnorm(modeloFinal$residuals);
qqnorm(modeloFinal$residuals); qqline(modeloFinal$residuals,col=2)
confint(modeloFinal,level=0.95)
cor(modeloFinal$residuals,creditos$Rating)
cor(modeloFinal$residuals,creditos$Balance)
boxplot(modeloFinal$residuals~creditos$Mortgage)
aggregate(modeloFinal$residuals~creditos$Mortgage,FUN=mean)
shapiro.test(modeloFinal$residual)
anova(modeloFinal,modeloGlobal)
modeloBalance=lm(Balance ~ ., data = creditos) # con función a todas las variables del data set
summary(modeloBalance)
modeloBalanceFin=lm(Balance ~                    , data = creditos)
summary(modeloBalanceFin)
ModelAutoBackward=step(modeloBalance,direction="backward",trace=1)
summary(ModelAutoBackward)
Ventas=read.csv2("data/ventas.csv",stringsAsFactors = FALSE)
str(Ventas)
head(Ventas)
summary(Ventas)
Ventas$Fecha=as.Date(Ventas$Fecha)
Ventas$Producto=as.factor(Ventas$Producto)
str(Ventas)
head(Ventas)
summary(Ventas)
modelo1=lm(Cantidad~Precio,data=Ventas)
summary(modelo1)
plot(modelo1$residuals)
smoothScatter(modelo1$residuals)
hist(modelo1$residuals)
qqnorm(modelo1$residuals); qqline(modelo1$residuals,col=2)
confint(modelo1,level=0.95)
modelo2=lm(log(Cantidad)~Precio,data=Ventas)
summary(modelo2)
plot(modelo2$residuals)
smoothScatter(modelo2$residuals)
plot(modelo2$residuals)
hist(modelo2$residuals)
qqnorm(modelo2$residuals); qqline(modelo2$residuals,col=2)
modelo3=lm(log(Cantidad)~log(Precio),data=Ventas)
# Es el modelo que tiene mas sentido en el mundo económico
# que porcentaje de variacion en el precio tiene influencia en el % de ventas
# cuando el precio se aumenta en un 1%, la cantidad vendida se reduce en un 0.87%
summary(modelo3)
plot(Ventas$Precio,Ventas$Cantidad)
abline(modelo1,col=2)
plot(modelo1$residuals,col=Ventas$Producto)
modelo1_A0143=lm(Cantidad~Precio,data=Ventas[Ventas$Producto=="A0143",])
modelo1_A0351=lm(Cantidad~Precio,data=Ventas[Ventas$Producto=="A0351",])
plot(Ventas$Precio,Ventas$Cantidad)
abline(modelo1,col="red",lty = "dashed")
abline(modelo1_A0143,col="blue")
abline(modelo1_A0351,col="green")
summary(modelo1)
summary(modelo1_A0143)
summary(modelo1_A0351)
chow.test(Ventas$Cantidad[Ventas$Producto=="A0143"],Ventas$Precio[Ventas$Producto=="A0143"],Ventas$Cantidad[Ventas$Producto=="A0351"],Ventas$Precio[Ventas$Producto=="A0351"])
#
x=c(1,2,3,4,5,6,7,8,9,10)
y=3*x+2+rnorm(length(x),0,1) # al no fijar semilla, a cada uno nos sale una cosa distinta
Datos=data.frame(x,y)
modelolm=lm(y~x, data=Datos)
summary(modelolm)
plot(Datos)
xOut=c(x,15)
yOut=c(y,300)
DatosOut=data.frame(xOut,yOut)
modelolmOut=lm(yOut~xOut,data=DatosOut)
summary(modelolmOut)
xOut
summary(modelolm)
xOut=c(x,15)
yOut=c(y,300)
DatosOut=data.frame(xOut,yOut)
modelolmOut=lm(yOut~xOut,data=DatosOut)
summary(modelolmOut)
plot(xOut,yOut)
abline(modelolm,col="blue")
abline(modelolmOut,col="red")
abline(a=modelolm$coefficients[1],b=modelolm$coefficients[2],col="blue")
abline(a=modelolmOut$coefficients[1],b=modelolmOut$coefficients[2],col="red")
ggplot(Datos, aes(x = x, y = y)) + geom_point() +
geom_smooth(method = "lm", se=TRUE, color="red", formula = y ~ x)
ggplot(DatosOut, aes(x = xOut, y = yOut)) + geom_point() +
geom_smooth(method = "lm", se=TRUE, color="red", formula = y ~ x)
library(MASS)
modelorlm = rlm(y ~ x, data = Datos)
modelorlmOut = rlm(y ~ x, data = DatosOut)
abline(modelorlm,col="green")
abline(modelorlmOut,col="brown")
library(MASS)
modelorlm = rlm(y ~ x, data = Datos)
modelorlmOut = rlm(y ~ x, data = DatosOut)
abline(modelorlm,col="green")
abline(modelorlmOut,col="brown")
abline(a=modelolm$coefficients[1],b=modelolm$coefficients[2],col="blue")
abline(a=modelolmOut$coefficients[1],b=modelolmOut$coefficients[2],col="red")
# con rlm se da cuenta que hay outliers y se los calza
modelorlm = rlm(y ~ x, data = Datos)
modelorlm = rlm(y ~ x, data = Datos)
abline(modelorlm,col="green")
modelorlmOut = rlm(yOut ~ xOut, data
modelorlmOut = rlm(yOut ~ xOut, data = DatosOut)
library(MASS)
modelorlm = rlm(y ~ x, data = Datos)
plot(xOut,yOut)
modelorlmOut = rlm(yOut ~ xOut, data = DatosOut)
abline(modelorlm,col="green")
abline(modelorlmOut,col="brown")
abline(a=modelolm$coefficients[1],b=modelolm$coefficients[2],col="blue")
abline(a=modelolmOut$coefficients[1],b=modelolmOut$coefficients[2],col="red")
