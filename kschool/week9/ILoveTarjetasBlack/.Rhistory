?read.csv
carburantes <- read_csv2("data/carburantes.csv")
carburantes <- read_csv2("data/carburantes.csv") # con csv2 la separacion esperada es ;
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
carburantes <- read_csv2("data/carburantes.csv") # con csv2 la separacion esperada es ;
carburantes
names(carburantes)
carburantes
View(head(carburantes))
HoustonMap +
stat_bin2d(aes(x = lon, y = lat, colour = offense), data = crimes_houston, size = 1)
HoustonMap +
stat_bin2d(aes(x = lon, y = lat, data = crimes_houston, size = 1))
HoustonMap +
stat_density2d(aes(x = lon, y = lat, alpha = ..level..),fill="red4",
size = 2, data = subset(crimes.houston,offense=="robbery"),
geom = "polygon")
HoustonMap +
stat_density2d(aes(x = lon, y = lat, alpha = ..level..),fill="red4",
size = 2, data = subset(crimes_houston,offense=="robbery"),
geom = "polygon")
HoustonMap +
stat_density2d(aes(x = lon, y = lat, alpha = ..level..),fill="red4",
size = 2, data = subset(crimes_houston,offense=="robbery"))
HoustonMap +
stat_density2d(aes(x = lon, y = lat, alpha = ..level.., colour=offense),fill="red4",
size = 2, data = crimes_houston,
geom = "polygon")
HoustonMap +
stat_density2d(aes(x = lon, y = lat, alpha = ..level.., colour=offense),
size = 2, data = crimes_houston,
geom = "polygon")
HoustonMap +
stat_density2d(aes(x = lon, y = lat, alpha = ..level.., colour=offense),fill="red4",
size = 2, data = crimes_houston,
geom = "polygon")
HoustonMap +
stat_density2d(aes(x = lon, y = lat, alpha = ..level.., colour=offense),fill="red4",
size = 2, data = crimes_houston,
geom = "polygon") +
facet_wrap(~offense)
HoustonMap +
stat_density2d(aes(x = lon, y = lat, alpha = ..level..),fill=offense,
size = 2, data = crimes_houston,
geom = "polygon") +
facet_wrap(~offense)
HoustonMap +
stat_density2d(aes(x = lon, y = lat, alpha = ..level..), fill = offense,
size = 2, data = crimes_houston,
geom = "polygon") +
facet_wrap(~offense)
HoustonMap +
stat_density2d(aes(x = lon, y = lat, alpha = ..level..), fill = offense,
size = 2, data = crimes_houston, geom = "polygon") +
facet_wrap(~offense)
HoustonMap +
stat_density2d(aes(x = lon, y = lat, alpha = ..level..), fill = "offense",
size = 2, data = crimes_houston, geom = "polygon") +
facet_wrap(~offense)
HoustonMap +
stat_density2d(aes(x = lon, y = lat, alpha = ..level..), fill = offense,
size = 2, data = crimes_houston, geom = "polygon") +
facet_wrap(~offense)
crimes_houston
HoustonMap +
stat_density2d(aes(x = lon, y = lat, alpha = ..level..), fill = "red4",
size = 2, data = crimes_houston, geom = "polygon") +
facet_wrap(~offense)
HoustonMap +
stat_density2d(aes(x = lon, y = lat, alpha = ..level..), fill = offense,
size = 2, data = crimes_houston, geom = "polygon")
HoustonMap +
stat_density2d(aes(x = lon, y = lat, alpha = ..level..), fill = ~offense,
size = 2, data = crimes_houston, geom = "polygon")
HoustonMap +
stat_density2d(aes(x = lon, y = lat, alpha = ..level..), fill = offense,
size = 2, data = crimes_houston, geom = "polygon")
raster
install.packages("raster")
HoustonMap +
stat_density2d(aes(x = lon, y = lat, alpha = ..level..), fill=offense,
size = 2, data = crimes_houston, geom = "polygon")
getData
require(raster)
shape <- getData("GADM", country= "Spain", level = 2) #mapa administrativo a nivel provincial
peninsula <- subset(shape,!NAME_1=="Islas Canarias") #mapa sin las islas canarias
peninsula
peninsula
plot(shape)
summarise(shape)
summary(shape)
View(head(shape))
unique(shape$NAME_1)
plot(peninsula)
raster
str(shape)
View(head(shape))
coordinates(peninsula)
peninsula.df=fortify(peninsula,region="CCA_2") #convierte el shape en data.frames
ggplot() + geom_polygon(data = peninsula.df, aes(long, lat, group = group),
fill="grey60",colour = "grey80", size = .1)+coord_quickmap()
fortify
peninsula.df=fortify(peninsula,region="CCA_2") #convierte el shape en data.frames
install.packages("maptools")
peninsula.df=fortify(peninsula,region="CCA_2")
fortify
peninsula.df=fortify(peninsula,region="CCA_2")
peninsula.df=fortify(peninsula,region="CCA_2") #convierte el shape en data.frames
fortify?
?fortify
peninsula
View(head(peninsula))
peninsula.df=fortify(peninsula)
peninsula.df
ggplot() + geom_polygon(data = peninsula.df, aes(long, lat, group = group),
fill="grey60",colour = "grey80", size = .1)+coord_quickmap()
dim(peninsula)
peninsula.df=fortify(peninsula)
dim(peninsula)
shape <- getData("GADM", country= "Spain", level = 2) #mapa administrativo a nivel provincial
peninsula <- subset(shape,!NAME_1=="Islas Canarias") #mapa sin las islas canarias
peninsula.df=fortify(peninsula)
dim(peninsula)
shape <- getData("GADM", country= "Spain", level = 2) #mapa administrativo a nivel provincial
peninsula <- subset(shape,!NAME_1=="Islas Canarias") #mapa sin las islas canarias
peninsula
plot(peninsula)
peninsula.df=fortify(peninsula,region="CCA_2") #convierte el shape en data.frames
dim(peninsula.df)
peninsula.df=fortify(peninsula)
dim(peninsula.df)
ggplot() + geom_polygon(data = peninsula.df, aes(long, lat, group = group),
fill="grey60",colour = "grey80", size = .1)+coord_quickmap()
?fortify
fill="grey60",colour = "grey80", size = .1)+coord_quickmap()
names(peninsula.df)
names(peninsula.df)
View(head(peninsula.df))
ggplot() + geom_polygon(data = peninsula.df, aes(long, lat, group = group),
fill="grey60",colour = "grey80", size = .1)
?coord_quickmap
ggplot() + geom_polygon(data = peninsula.df, aes(long, lat, group = group),
fill="grey60",colour = "grey80", size = .1)
ggplot() + geom_polygon(data = peninsula.df, aes(long, lat, group = group),
fill="grey60",colour = "grey80", size = .1)+coord_quickmap()
ggplot() + geom_polygon(data = peninsula.df, aes(long, lat, group = group),
fill="grey60",colour = "grey80", size = .1)
ggplot() + geom_polygon(data = peninsula.df, aes(long, lat, group = group),
fill="grey60",colour = "grey80", size = .1)+coord_quickmap()
?fortify
peninsula.df=ggplot2::fortify(peninsula,region="CCA_2") #convierte el shape en data.frames
peninsula
View(head(peninsula))
View(peninsula)
paro
paro <- read_csv("Data/paro.csv")
names(paro) <- c("Anio", "Trimestre", "Tasa.paro", "Sexo", "Prov.id", "Provincia")
require(plotly)
p<-ggplot(paro, aes(x = Anio, y = Tasa.paro, color=Sexo,label=Provincia)) +
geom_jitter(alpha=.1) + geom_smooth(se=FALSE,method="lm")
ggplotly(p,tooltip = c("label", "color"))
require(tmap)
install.packages("tmap")
paro.mujeres <- Paro %>% filter(Sexo=="Mujeres" & Trimestre=="I" & AÃ±o=="2011")
paro.mujeres <- Paro %>% filter(Sexo=="Mujeres" & Trimestre=="I" & Anioo=="2011")
paro.mujeres <- paro %>% filter(Sexo=="Mujeres" & Trimestre=="I" & Anioo=="2011")
paro.mujeres <- paro %>% filter(Sexo=="Mujeres" & Trimestre=="I" & Anio=="2011")
peninsula@data=inner_join(peninsula@data,paro.mujeres,by=c("CCA_2"="Prov.id"))
m_shape(peninsula) + tm_fill("Tasa.paro", style="quantile", palette="Reds",title="Tasa de paro",alpha=.8) +
tm_borders("grey25", alpha=.5)
tmap_mode("view");last_map()
tm_shape(peninsula) + tm_fill("Tasa.paro", style="quantile", palette="Reds",title="Tasa de paro",alpha=.8) +
tm_borders("grey25", alpha=.5)
tmap_mode("view");last_map()
tm_shape(peninsula) + tm_fill("Tasa.paro", style="quantile", palette="Reds",title="Tasa de paro",alpha=.8) +
tm_borders("grey25", alpha=.5)
tm_shape(peninsula)
require(tmap)
tm_shape(peninsula)
tm_shape(peninsula) + tm_fill("Tasa.paro", style="quantile", palette="Reds",title="Tasa de paro",alpha=.8) +
tm_borders("grey25", alpha=.5)
tmap_mode("view");last_map()
setwd("~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
pressure
cars
```{r}
cars
cars
cars %>%
group_by_(speed) %>%
summarise(total=n())
cars %>%
group_by(speed) %>%
summarise(total=n())
ggplot(data = cars_2, aes (x = speed, y = total))
cars_2 <- cars %>%
group_by(speed) %>%
summarise(total=n())
ggplot(data = cars_2, aes (x = speed, y = total))
cars_2 <- cars %>%
group_by(speed) %>%
summarise(total=n())
ggplot(data = cars_2, aes (x = speed, y = total))
library(tidyverse)
library(ggplot2)
cars_2 <- cars %>%
group_by(speed) %>%
summarise(total=n())
ggplot(data = cars_2, aes (x = speed, y = total))
knitr::Sweave2knitr()
cars_2 <- cars %>%
group_by(speed) %>%
summarise(total=n())
library(knitr)
kable(cars_2,caption="Table with a nicer representation thanks to knitr")
cars_2
install.packages("DT")
Data()
DataFrameCallback
Data
Data()
data()
peninsula.df=ggplot2::fortify(peninsula,region="CCA_2") #convierte el shape en data.frames
library(maptools)
library(gpclib)
gpclibPermit()
peninsula.df=ggplot2::fortify(peninsula,region="CCA_2") #convierte el shape en data.frames
gpclibPermit()
library(maptools)
library(gpclib)
install.packages("gpclib")
library(gpclib)
gpclibPermit()
peninsula.df=ggplot2::fortify(peninsula,region="CCA_2") #convierte el shape en data.frames
setwd("~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny")
setwd("~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny")
shiny::runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
faithful
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
x    <- faithful[, 2]
seq(min(x), max(x))
seq(min(x), max(x), 2)
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
x
faithful
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
?geom_point
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
faithful
data()
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/singleShiny')
setwd("~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny")
runApp('sencillo')
runApp('sencillo')
runApp('sencillo')
runApp('sencillo')
runApp('sencillo')
runApp('sencillo')
runApp('sencillo')
runApp('sencillo')
runApp('sencillo')
runApp('sencillo')
runApp('sencillo')
runApp('sencillo')
runApp('sencillo')
runApp('sencillo')
runApp('sencillo')
?fileInput
runApp('sencillo')
runApp('sencillo')
runApp('sencillo')
runApp('sencillo')
runApp('interfaz')
runApp('sencillo')
runApp('interfaz')
runApp('sencillo')
runApp('interfaz')
runApp('interfaz')
runApp('interfaz')
runApp('interfaz')
runApp('interfaz')
runApp('interfaz')
runApp('interfaz')
runApp('interfaz')
runApp('interfaz')
runApp('interfaz')
runApp('interfaz')
mtcars$modelo=rownames(mtcars)
mtcars
mtcars$modelo
runApp('interfaz2')
runApp('interfaz2')
runApp('interfaz2')
runApp('interfaz2')
runApp('inputs')
runApp('inputs')
runApp('reactividad')
require(ggplot2)
require(gapminder)
install.packages("gapminder")
runApp('reactividad')
runApp('guardar')
runApp('guardar')
runApp('guardar')
require(ggplot2)
require(tidyverse)
paro=read_csv("data/paro.csv")
evolucion<-function(DF,alpha=.1){
ggplot(DF,aes(x=AÃ±o,y=Tasa.paro)) +
geom_smooth(se=FALSE,span=1,size=2,col="blue")+
geom_line(alpha=alpha,size=1,aes(group=Provincia),col="blue")+
facet_wrap(~Trimestre)+ylim(15,30)+
theme_bw()
}
gapminder
runApp('reactividad')
runApp('reactividad')
runApp('reactividad')
runApp('reactividad')
runApp('reactividad')
ggplot(DF,aes(x=AÃ±o,y=Tasa.paro)) +
geom_smooth(se=FALSE,span=1,size=2,col="blue")+
geom_line(alpha=alpha,size=1,aes(group=Provincia),col="blue")+
facet_wrap(~Trimestre)+ylim(15,30)+
theme_bw()
require(ggplot2)
require(tidyverse)
paro=read_csv("data/paro.csv")
ggplot(DF,aes(x=AÃ±o,y=Tasa.paro)) +
geom_smooth(se=FALSE,span=1,size=2,col="blue")+
geom_line(alpha=alpha,size=1,aes(group=Provincia),col="blue")+
facet_wrap(~Trimestre)+ylim(15,30)+
theme_bw()
ggplot(DF,aes(x=AÃ±o,y=Tasa.paro)) +
geom_smooth(se=FALSE,span=1,size=2,col="blue")+
geom_line(alpha=alpha,size=1,aes(group=Provincia),col="blue")+
facet_wrap(~Trimestre)+ylim(15,30)
ggplot(DF,aes(x=AÃ±o,y=Tasa.paro)) +
geom_smooth(se=FALSE,span=1,size=2,col="blue")
runApp('guardar')
runApp('guardar')
runApp('guardar')
runApp('guardar')
runApp('guardar')
runApp('guardar')
setwd("~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/practica_gapminder")
runApp()
library(tidyverse)
library(tidyverse)
gapminder
install.packages("rvest")
install.packages("rvest")
install.packages("tidytext")
shiny::runApp()
library(tidyverse)
gapminder
library(gapminder)
gapminder
View(gapminder)
year_in = 1952
gapminder_year <- gapminder %>%
select(year == year_in)
year_in = 1952
gapminder_year <- gapminder %>%
filter(year == year_in)
ggplot(gapminder_year, aes(x = gdpPercap, y = lifeExp, group = country, colour = country ))
ggplot(gapminder_year, aes(x = gdpPercap, y = lifeExp, group = country, colour = country ))
+ geom_point()
ggplot(gapminder_year, aes(x = gdpPercap, y = lifeExp, group = country, colour = country ))
+ geom_point()
ggplot(gapminder_year, aes(x = gdpPercap, y = lifeExp, group = country, colour = country )) +
geom_point()
unique(gapminder_year$country)
ggplot(gapminder_year, aes(x = gdpPercap, y = lifeExp, group = country, colour = country )) +
geom_point(size=lifeExp)
ggplot(gapminder_year, aes(x = gdpPercap, y = lifeExp, colour = country )) +
geom_point(size=lifeExp)
ggplot(gapminder_year, aes(x = gdpPercap, y = lifeExp, colour = country, size = lifeExp  )) +
geom_point()
ggplot(gapminder_year, aes(x = gdpPercap, y = lifeExp, size = lifeExp  )) +
geom_point()
ggplot(gapminder_year, aes(x = gdpPercap, y = lifeExp, size = lifeExp, col = country  )) +
geom_point()
ggplot(gapminder_year, aes(x = gdpPercap, y = lifeExp, size = lifeExp )) +
geom_point()
ggplot(gapminder_year, aes(x = gdpPercap, y = lifeExp, size = lifeExp, colour = country )) +
geom_point()
ggplot(gapminder_year, aes(x = gdpPercap, y = lifeExp, size = lifeExp)) +
geom_point()
ggplot(gapminder_year, aes(x = gdpPercap, y = lifeExp, size = lifeExp, colour = continent )) +
geom_point()
ggplot(gapminder_year, aes(x = gdpPercap, y = lifeExp, size = lifeExp, colour = continent )) +
geom_point() + scale_size("",breaks=seq(20:70,10))
ggplot(gapminder_year, aes(x = gdpPercap, y = lifeExp, size = lifeExp, colour = continent )) +
geom_point() + scale_size("",breaks=seq(20,70,10))
ggplot(gapminder_year, aes(x = gdpPercap, y = lifeExp, size = lifeExp, colour = continent )) +
geom_point() + scale_size("",breaks=seq(20,70,10))+xlim(0,50000)
ggplot(gapminder_year, aes(x = gdpPercap, y = lifeExp, size = lifeExp, colour = continent )) +
geom_point() + scale_size("",breaks=seq(20,70,10),guide="none")+xlim(0,50000)
runApp('~/Documents/MSS/Personales/GitRepos/KSchool_dataScienceMaster/kschool/week10/Shiny/inputs')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?subset
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot(gapminder, aes(x = gdpPercap, y = lifeExp, size = lifeExp, colour = continent )) +
geom_point() + scale_size("", breaks = seq(20,70,10), guide = "none") + xlim(0,50000) + ylim(0,100) +
geom_text(x = 45000, y = 90, label = as.character(input$years), colour = 'grey50', size = 15, alpha = .5)
p <- ggplot(gapminder, aes(x = gdpPercap, y = lifeExp, size = lifeExp, colour = continent )) +
geom_point() + scale_size("", breaks = seq(20,70,10), guide = "none") + xlim(0,50000) + ylim(0,100) +
geom_text(x = 45000, y = 90, label = as.character(input$years), colour = 'grey50', size = 15, alpha = .5)
ggplotly(p, tooltip = c("color"))
require(plotly)
p <- ggplot(gapminder, aes(x = gdpPercap, y = lifeExp, size = lifeExp, colour = continent )) +
geom_point() + scale_size("", breaks = seq(20,70,10), guide = "none") + xlim(0,50000) + ylim(0,100) +
geom_text(x = 45000, y = 90, label = as.character(input$years), colour = 'grey50', size = 15, alpha = .5)
ggplotly(p, tooltip = c("color"))
require(plotly)
p <- ggplot(gapminder, aes(x = gdpPercap, y = lifeExp, size = lifeExp, colour = continent )) +
geom_point() + scale_size("", breaks = seq(20,70,10), guide = "none") + xlim(0,50000) + ylim(0,100) +
geom_text(x = 45000, y = 90, label = as.character(input$years), colour = 'grey50', size = 15, alpha = .5)
ggplotly(p)
require(plotly)
p <- ggplot(gapminder, aes(x = gdpPercap, y = lifeExp, size = lifeExp, colour = continent )) +
geom_point() + scale_size("", breaks = seq(20,70,10), guide = "none") + xlim(0,50000) + ylim(0,100) +
geom_text(x = 45000, y = 90, label = as.character(input$years), colour = 'grey50', size = 15, alpha = .5)
ggplotly(p,tooltip = c())
ggplot(gapminder, aes(x = gdpPercap, y = lifeExp, size = lifeExp, colour = continent )) +
geom_point() + scale_size("", breaks = seq(20,70,10), guide = "none") + xlim(0,50000) + ylim(0,100) +
geom_text(x = 45000, y = 90, label = as.character(input$years), colour = 'grey50', size = 15, alpha = .5)
ggplot(gapminder, aes(x = gdpPercap, y = lifeExp, size = lifeExp, colour = continent )) +
geom_point() + scale_size("", breaks = seq(20,70,10), guide = "none") + xlim(0,50000) + ylim(0,100) +
geom_text(x = 45000, y = 90, label = as.character(1999), colour = 'grey50', size = 15, alpha = .5)
require(plotly)
p <- ggplot(gapminder, aes(x = gdpPercap, y = lifeExp, size = lifeExp, colour = continent )) +
geom_point() + scale_size("", breaks = seq(20,70,10), guide = "none") + xlim(0,50000) + ylim(0,100) +
geom_text(x = 45000, y = 90, label = as.character(1999), colour = 'grey50', size = 15, alpha = .5)
ggplotly(p,tooltip = c())
require(plotly)
p <- ggplot(gapminder, aes(x = gdpPercap, y = lifeExp, size = lifeExp, colour = continent )) +
geom_point() + scale_size("", breaks = seq(20,70,10), guide = "none") + xlim(0,50000) + ylim(0,100) +
geom_text(x = 45000, y = 90, label = as.character(1999), colour = 'grey50', size = 15, alpha = .5)
ggplotly(p,tooltip = c("label", "color"))
runApp()
